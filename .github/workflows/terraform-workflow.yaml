name: Terraform

on:
  workflow_dispatch: 
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6 

      - name: Configure AWS Credentials
        env:
          AWS_REGION: us-east-1
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }} 
        run: |
          # Install AWS CLI if not already installed
          sudo apt-get update && sudo apt-get install -y awscli jq

          # Obtain OIDC token (GitHub Actions does this automatically)
          OIDC_TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r .value)

          # Assuming the role using OIDC
          CREDS=$(aws sts assume-role-with-web-identity \
            --role-arn $AWS_ROLE_ARN \
            --role-session-name github-actions \
            --web-identity-token $OIDC_TOKEN \
            --duration-seconds 3600)

          # Export credentials for Terraform
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

          # Save the credentials to the environment
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> $GITHUB_ENV

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: |
          cd ./terrafrom-eks
          terraform init

      - name: Terraform Plan
        run: |
          cd ./terrafrom-eks 
          terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd ./terrafrom-eks
          terraform apply -auto-approve
